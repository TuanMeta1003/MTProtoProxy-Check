name: Fetch MTProto Proxy

on:
  workflow_dispatch:
    inputs:
      countries:
        description: "Danh sách mã country cách nhau bởi dấu phẩy, ví dụ: SG,US,DE. Để trống lấy tất cả"
        required: false

  schedule:
    - cron: '0 17 * * *' # 0h sáng UTC+7

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Fetch proxies & prepare matrix
        id: set-matrix
        run: |
          curl -s 'https://mtpro.xyz/api/?type=mtproto' -o proxies.json

          COUNTRIES="${{ github.event.inputs.countries }}"

          if [ -z "$COUNTRIES" ]; then
            countries=$(jq -r '.[].country' proxies.json | sort | uniq | tr '\n' ',' | sed 's/,$//')
          else
            countries="$COUNTRIES"
          fi

          echo "Countries: $countries"
          echo "matrix={\"country\":[\"$(echo $countries | sed 's/,/\",\"/g')\"]}" >> $GITHUB_OUTPUT

      - name: Upload proxies.json
        uses: actions/upload-artifact@v4
        with:
          name: proxies-json
          path: proxies.json

  fetch-proxy:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl netcat-openbsd python3 python3-pip
          pip3 install telethon

      - name: Download proxies.json
        uses: actions/download-artifact@v4
        with:
          name: proxies-json

      - name: Tạo file kiểm tra proxy Telethon
        run: |
          cat <<EOF > check_proxy.py
          from telethon import TelegramClient
          import sys
          import asyncio

          api_id = int(sys.argv[1])
          api_hash = sys.argv[2]
          proxy_host = sys.argv[3]
          proxy_port = int(sys.argv[4])
          proxy_secret = sys.argv[5]

          async def check_proxy():
              try:
                  async with TelegramClient('anon', api_id, api_hash, proxy=('mtproto', proxy_host, proxy_port, proxy_secret)) as client:
                      await client.connect()
                      if not await client.is_user_authorized():
                          print("alive")
                      else:
                          print("alive")
              except (OSError, ConnectionError):
                  print("dead")
              except Exception as e:
                  print(f"dead {e}")

          asyncio.run(check_proxy())
          EOF

      - name: Kiểm tra proxy cho ${{ matrix.country }}
        env:
          API_ID: ${{ secrets.TELEGRAM_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
        run: |
          mkdir -p proxy
          country_upper=$(echo "${{ matrix.country }}" | tr '[:lower:]' '[:upper:]')

          jq -c --arg country "$country_upper" '.[] | select(.country == $country)' proxies.json \
          | jq -r '.host + " " + (.port | tostring) + " " + .secret' > proxy_list.txt

          > "proxy/proxy_${country_upper}.txt"

          check_proxy_tls() {
            host=$1
            port=$2

            printf '\x16\x03\x01\x00\x31\x01\x00\x00\x2d\x03\x03\x53\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b\x4b' \
            | timeout 5 nc $host $port | head -c 1 | grep -q . && echo "alive" || echo "dead"
          }

          while read -r line; do
            host=$(echo $line | awk '{print $1}')
            port=$(echo $line | awk '{print $2}')
            secret=$(echo $line | awk '{print $3}')

            tls_status=$(check_proxy_tls $host $port)

            if [ "$tls_status" = "alive" ]; then
              real_status=$(python3 check_proxy.py $API_ID $API_HASH $host $port $secret)
              if [[ "$real_status" == *"alive"* ]]; then
                echo "tg://proxy?server=$host&port=$port&secret=$secret" >> proxy/proxy_${country_upper}.txt
                echo "$host:$port ✅"
              else
                echo "$host:$port ❌ (Telethon)"
              fi
            else
              echo "$host:$port ❌ (TLS)"
            fi
          done < proxy_list.txt

      - name: Upload proxy file
        uses: actions/upload-artifact@v4
        with:
          name: proxy-${{ matrix.country }}
          path: proxy/proxy_${country_upper}.txt

  zip-and-send:
    needs: fetch-proxy
    runs-on: ubuntu-latest
    if: ${{ success() && github.event.inputs.countries == '' }}

    steps:
      - name: Download tất cả Artifact từng country
        uses: actions/download-artifact@v4
        with:
          path: proxy

      - name: Download proxies.json (không đưa vào zip)
        uses: actions/download-artifact@v4
        with:
          name: proxies-json
          path: proxies_json

      - name: Gom tất cả file txt ra cùng thư mục
        run: |
          mkdir txts
          find proxy -type f -name "*.txt" -exec cp {} txts/ \;

      - name: Zip chỉ các file .txt
        run: |
          current_date_safe=$(TZ=Asia/Ho_Chi_Minh date +"%d-%m-%Y")
          cd txts
          zip "../Proxy[${current_date_safe}].zip" *.txt
          cd ..
          ls -lh "Proxy[${current_date_safe}].zip"

      - name: Gửi Proxy Zip lên Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_IDS: ${{ secrets.TELEGRAM_CHAT_IDS }}
        run: |
          current_date_display=$(TZ=Asia/Ho_Chi_Minh date +"%d/%m/%Y")
          current_date_safe=$(TZ=Asia/Ho_Chi_Minh date +"%d-%m-%Y")
          message="Update MTProto Proxy $current_date_display | Fetch From [mtpro.xyz](https://mtpro.xyz/mtproto)"
          file_real="Proxy[${current_date_safe}].zip"
          file_display="Proxy[${current_date_display}].zip"

          if [ ! -f "$file_real" ]; then
            echo "Lỗi: Không tìm thấy file zip $file_real"
            exit 1
          fi

          IFS=',' read -ra CHAT_ID_LIST <<< "$TELEGRAM_CHAT_IDS"

          for chat_id in "${CHAT_ID_LIST[@]}"; do
            echo "Gửi cho Chat ID $chat_id"

            curl -s -F chat_id="${chat_id}" \
              -F caption="${message}" \
              -F parse_mode="Markdown" \
              -F document=@"$file_real" \
              -F filename="$file_display" \
              "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument"
          done
